{"version":3,"sources":["utils.js","Icons.js","Table.js","App.js","serviceWorker.js","index.js"],"names":["parseLinkHeader","s","parts","split","link","forEach","p","rel","match","url","StarIcon","props","react_default","a","createElement","SvgIcon_default","Object","assign","viewBox","width","height","d","ForkIcon","Wrapper","styled","div","_templateObject","Row","tr","_templateObject2","Table","handleScroll","event","target","clientHeight","scrollHeight","scrollTop","loadMore","_this","_this$props","this","data","children","onScroll","style","map","index","key","className","name","Icons_StarIcon","stargazers_count","Icons_ForkIcon","forks","PureComponent","defaultProps","App_templateObject","App","state","q","loading","repos","handleChange","value","timer","clearTimeout","source","cancel","setState","error","nextPage","setTimeout","asyncToGenerator","regenerator_default","mark","_callee","response","linkString","wrap","_context","prev","next","concat","axios","CancelToken","get","cancelToken","token","sent","headers","items","t0","handleRequestError","stop","handleLoadMore","_callee2","_this$state","_context2","abrupt","toConsumableArray","isCancel","config","handleRetry","_this$state2","App_Wrapper","TextField_default","onChange","variant","placeholder","src_Table","textAlign","padding","Button_default","onClick","CircularProgress_default","Boolean","window","location","hostname","theme","createMuiTheme","typography","useNextVariants","palette","primary","blue","ReactDOM","render","MuiThemeProvider_default","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ac77fb24.chunk.js","sourcesContent":["// eslint-disable-next-line\nexport const parseLinkHeader = (s) => {\n  const parts = s.split(',');\n  const link = {};\n  parts.forEach(p => {\n    const rel = p.match(/rel=\"(\\w+)\"/)[1];\n    const url = p.match(/<(.+)>/)[1];\n\n    link[rel] = url;\n  })\n  \n  return link;\n}","import React from \"react\";\nimport SvgIcon from \"@material-ui/core/SvgIcon\";\n\nexport const StarIcon = (props) => (\n  <SvgIcon {...props} viewBox=\"0 0 14 16\" width=\"14\" height=\"16\">\n    <path d=\"M14 6l-4.9-.64L7 1 4.9 5.36 0 6l3.6 3.26L2.67 14 7 11.67 11.33 14l-.93-4.74L14 6z\"/>\n  </SvgIcon>\n);\n\nexport const ForkIcon = (props) => (\n  <SvgIcon {...props} viewBox=\"0 0 14 16\" width=\"14\" height=\"16\">\n    <path d=\"M8 1a1.993 1.993 0 0 0-1 3.72V6L5 8 3 6V4.72A1.993 1.993 0 0 0 2 1a1.993 1.993 0 0 0-1 3.72V6.5l3 3v1.78A1.993 1.993 0 0 0 5 15a1.993 1.993 0 0 0 1-3.72V9.5l3-3V4.72A1.993 1.993 0 0 0 8 1zM2 4.2C1.34 4.2.8 3.65.8 3c0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2zm3 10c-.66 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2zm3-10c-.66 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2z\"/>\n  </SvgIcon>\n)","import React, { PureComponent } from 'react';\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\n\nimport { StarIcon, ForkIcon } from \"./Icons\";\n\n\nconst Wrapper = styled.div`\n  max-height: calc(100vh - 116px);\n  padding: 20px;\n  overflow-y: auto;\n`;\n\nconst Row = styled.tr`\n  padding: 12px;\n\n  td {\n    border-bottom: 1px solid #dddddd;\n    padding: 12px;\n  }\n  \n  svg {\n    vertical-align: middle;\n    margin-right: 5px;\n  }\n  td.name{\n    text-align:left;\n  }\n`;\n\nclass Table extends PureComponent {\n  static defaultProps = {\n    loadMore: () => {},\n    children: null,\n  }\n\n  static propTypes = {\n    data: PropTypes.arrayOf(PropTypes.shape({\n      name: PropTypes.string,\n      stargazers_count: PropTypes.number,\n      forks: PropTypes.number,\n    })).isRequired,\n    loadMore: PropTypes.func,\n    children: PropTypes.node,\n  }\n\n  handleScroll = (event) => {\n    const { target } = event;\n    const { clientHeight, scrollHeight, scrollTop } = target;\n    if(clientHeight + scrollTop > scrollHeight - 100) {\n      const { loadMore } = this.props;\n      loadMore();\n    }\n  }\n\n  render() {\n    const { data, children } = this.props;\n\n    return (\n      <Wrapper onScroll={this.handleScroll}>\n        <table style={{width: '100%'}}>\n          <tbody>\n            {data.map((d, index) => (\n              // eslint-disable-next-line\n              <Row key={index}>\n                <td className=\"name\">\n                  {d.name}\n                </td>\n                <td>\n                  <StarIcon/>\n                  {d.stargazers_count}\n                </td>\n                <td>\n                  <ForkIcon/>\n                  {d.forks}\n                </td>\n              </Row>\n            ))}\n          </tbody>\n        </table>\n        {children}\n      </Wrapper>\n    );\n  }\n}\n\nexport default Table;","import React, { PureComponent } from 'react';\nimport TextField from \"@material-ui/core/TextField\";\nimport styled from \"styled-components\";\nimport axios from \"axios\";\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Button from \"@material-ui/core/Button\";\n\nimport { parseLinkHeader } from \"./utils\";\nimport Table from './Table';\n\nconst Wrapper = styled.div`\n  width: 100%;\n\n  .input-field {\n    margin: auto;\n    width: 80%;\n    display: flex;\n    margin-top: 20px;\n  }\n`;\n\n\nclass App extends PureComponent {\n  state = {\n    q: '',\n    loading: false,\n    repos: [],\n  }\n\n  // 設定 timer 避免輸入時\b，短時間大量 request\n  handleChange = (event) => {\n    const { value } = event.target;\n\n    // clear timeout & cancel request\n    if(this.timer) {\n      clearTimeout(this.timer);\n    }\n    if(this.source) {\n      this.source.cancel();\n    }\n\n    this.setState({\n      q: value,\n      loading: false,\n      repos: [],\n      error: null,\n      nextPage: null,\n    })\n\n    // no need to send request if field is empty\n    if(value === '') return;\n\n    this.setState({\n      loading: true,\n    })\n    this.timer = setTimeout(async () => {\n      const url = `https://api.github.com/search/repositories?q=${value}`;\n      this.source = axios.CancelToken.source();\n      try {\n\n        const response = await axios.get(url, {\n          cancelToken: this.source.token,\n        });\n\n        const linkString = response.headers.link;\n        this.setState({\n          repos: response.data.items,\n          loading: false,\n          nextPage: linkString? parseLinkHeader(linkString).next : null,\n        });\n      } catch(error) {\n        this.handleRequestError(error);\n      }\n    }, 500);\n  }\n\n  handleLoadMore = async () => {\n    const { loading, nextPage, error } = this.state;\n    // return if loading, hasNoMore, error\n    if(loading || !nextPage || error) return;\n    \n    this.setState({\n      loading: true,\n    })\n    try {\n      const response = await axios.get(nextPage);\n      const linkString = response.headers.link;\n      const link = parseLinkHeader(linkString);\n      this.setState(prev => ({\n        loading: false,\n        repos: [...prev.repos, ...response.data.items],\n        nextPage: link.next\n      }))\n    } catch (err) {\n      this.handleRequestError(err);\n    }\n  }\n\n  handleRequestError = (error) => {\n    if(axios.isCancel(error)) return;\n    const { response } = error;\n    if(response.headers['x-ratelimit-remaining'] === \"0\") {\n      this.setState({\n        loading: false,\n        error: 'no-ratelimit-remaining',\n        nextPage: response.config.url\n      })\n    }\n    else {\n      this.setState({\n        loading: false,\n        error: 'others',\n      })\n    }\n  }\n\n  handleRetry = () => {\n    this.setState({\n      error: null,\n    }, this.handleLoadMore);\n  }\n\n  render() {\n    const { q, repos, loading, error } = this.state;\n    \n    return (\n      <Wrapper>\n        <TextField\n          value={q}\n          className=\"input-field\"\n          onChange={this.handleChange}\n          variant=\"outlined\"\n          placeholder=\"Repo search field\"\n        />\n        <Table\n          data={repos}\n          loading={loading}\n          loadMore={this.handleLoadMore}\n        >\n          {error === 'no-ratelimit-remaining' &&\n            <div style={{ textAlign: 'center', padding: 20 }}>\n              已達到 api 請求上限，請稍後再試 <Button variant=\"outlined\" onClick={this.handleRetry}>\n                重試\n              </Button>\n            </div>\n          }\n          {loading &&\n            <div style={{ textAlign: 'center', padding: 20 }}>\n              <CircularProgress/>\n            </div>\n          }\n        </Table>\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport MuiThemeProvider from \"@material-ui/core/styles/MuiThemeProvider\";\nimport createMuiTheme from \"@material-ui/core/styles/createMuiTheme\";\nimport blue from \"@material-ui/core/colors/blue\";\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst theme = createMuiTheme({\n  typography: {\n    useNextVariants: true,\n  },\n  palette: {\n    primary: blue,\n  },\n})\n\nReactDOM.render(\n  <MuiThemeProvider theme={theme}>\n    <App />\n  </MuiThemeProvider>\n  , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}